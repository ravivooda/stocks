steps:
#  # Run tests
#  - name: golang:1.17
#    entrypoint: /bin/bash
#    args:
#      - -c
#      - |
#        go test -v ./...
#        echo "successfully tested"

  # TODO: Need to refactor this code with simple secrets.yaml creation
  - name: golang:1.17
    entrypoint: /bin/bash
    id: "Setting up Secrets"
    args:
      - -c
      - |
        echo "ms_api:" >> secrets.yaml
        echo "  key: ${_MS_API_KEY_SECRET}" >> secrets.yaml
        
        cp secrets.yaml secrets_production.yaml
        
        echo "notifications:" >> secrets.yaml
        echo "  should_send_email: true" >> secrets.yaml
        echo "test_config:" >> secrets.yaml
        echo "  max_server_run_time: 10" >> secrets.yaml
        echo "uploads:" >> secrets.yaml
        echo "  should_upload_insights_output_to_gcp: true" >> secrets.yaml

  # Running orchestrator
  - name: golang:1.17
    entrypoint: /bin/bash
    id: "Running orchestrator with setup"
    args:
      - -c
      - |
        go run .
        echo "done"
    timeout: 60000s

  - name: golang:1.17
    entrypoint: /bin/bash
    id: "Resetting secrets"
    args:
      - -c
      - |
        rm secrets.yaml
        cp secrets_production.yaml secrets.yaml

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'us-west1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/stocks:$SHORT_SHA', '.' ]

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'us-west1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/stocks:$SHORT_SHA' ]

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [ 'run', 'deploy', 'stocks',
            '--image=us-west1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/stocks:$SHORT_SHA',
            '--region', 'us-west1', '--platform', 'managed' ]

timeout: 80000s

## Save test logs to Google Cloud Storage
#artifacts:
#  objects:
#    location: gs://$_BUCKET_NAME/
#    paths:
#      - ${SHORT_SHA}_test_log.xml
# Store images in Google Artifact Registry
images:
  - us-west1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/stocks:$SHORT_SHA
