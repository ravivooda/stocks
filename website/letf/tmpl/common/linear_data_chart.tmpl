{{ define "linear_security_chart" }}
    <!-- Line Chart -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Portfolio Performance</h4>
                <canvas id="lineChart"></canvas>
            </div>
            <div class="card-footer">
                <div class="card-group">
                    <div class="card bg-info-lighten-2">
                        <div class="stat-widget-one">
                            <div class="stat-content">
                                <div class="stat-text">If you've invested</div>
                                <div class="stat-digit">
                                    <i class="fa fa-usd"></i>{{ .TaxLossCalculationData.Begin.DailyPrice}}
                                </div>
                                <div class="stat-text">on {{renderDate .TaxLossCalculationData.Begin.Date}}</div>
                            </div>
                        </div>
                    </div>
                    <div class="card {{if .TaxLossCalculationData.IsHarvesteable}} bg-warning-lighten-2 {{ else}} bg-success-rgba1 {{ end}}">
                        <div class="stat-widget-one">
                            <div class="stat-content">
                                <div class="stat-text">It would be</div>
                                <div class="stat-digit {{if .TaxLossCalculationData.IsHarvesteable}} gradient-loss-text {{ else}} gradient-profit-text {{ end}}">
                                    <i class="fa fa-usd"></i>{{ .TaxLossCalculationData.Today.DailyPrice}}
                                </div>
                                <div class="stat-text">today</div>
                            </div>
                        </div>
                    </div>
                    <div class="card bg-success-lighten-2">
                        <div class="stat-widget-one">
                            <div class="stat-content">
                                {{if .TaxLossCalculationData.IsHarvesteable}}
                                    <div class="stat-text">You could harvest</div>
                                {{ else}}
                                    <div class="stat-text">Your gains are</div>
                                {{ end}}

                                <div class="stat-digit gradient-price-text">
                                    <i class="fa fa-usd"></i>{{ .TaxLossCalculationData.ChangePrice}}
                                </div>
                                {{if .TaxLossCalculationData.IsHarvesteable}}
                                <div class="stat-text">by swapping with {{template "etf" .TaxLossCalculationData.Swappable}}</div>
                                {{end }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="application/javascript">
        //line chart
        let ctx = document.getElementById("lineChart");
        let myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [{{ range $i, $d := .LinearDailyData }}"{{$d.Date}}",{{ end }}],
                datasets: [{
                    label: '{{ .Ticker }} Stock Price',
                    data: [{{ range $i, $d := .LinearDailyData }}"{{$d.DailyPrice}}",{{ end }}],
                    borderColor: 'rgb(75, 192, 192)',
                    spanGaps: true,
                    fill: {
                        above: 'rgba(146,252,109,0.5)',
                        below: 'rgba(250,122,122,0.5)',
                        target: {value: {{ (index .LinearDailyData 0).DailyPrice }}}
                    }
                }]
            },
            options: {
                responsive: true,
                tooltips: {
                    mode: 'index',
                    intersect: false,
                    position: 'nearest',
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            autoSkip: false,
                            maxRotation: 90,
                            minRotation: 90
                        }
                    }]
                }
            }
        });
    </script>
{{ end }}